
using System.Globalization;

namespace ZapierRequestsInterval;

internal class Program
{
    public static void Main(string[] args)
    {
        string[] dates = {
            "2023-06-21T09:15:50.664260+00:00",
            "2023-06-21T09:15:50.663571+00:00",
            "2023-06-21T09:15:50.663258+00:00",
            "2023-06-21T09:15:50.663901+00:00",
            "2023-06-21T09:15:50.662665+00:00",
            "2023-06-21T09:15:50.662963+00:00",
            "2023-06-21T09:15:50.662359+00:00",
            "2023-06-21T09:15:50.662064+00:00",
            "2023-06-21T09:15:50.661460+00:00",
            "2023-06-21T09:15:50.661769+00:00",
            "2023-06-21T09:15:50.661028+00:00",
            "2023-06-21T09:15:50.660682+00:00",
            "2023-06-21T09:15:50.660027+00:00",
            "2023-06-21T09:15:50.660350+00:00",
            "2023-06-21T09:15:50.659712+00:00",
            "2023-06-21T09:15:50.659417+00:00",
            "2023-06-21T09:15:50.659122+00:00",
            "2023-06-21T09:15:50.658814+00:00",
            "2023-06-21T09:15:50.658453+00:00",
            "2023-06-21T09:15:50.658125+00:00",
            "2023-06-21T09:15:50.657072+00:00",
            "2023-06-21T09:15:50.657710+00:00",
            "2023-06-21T09:15:50.657374+00:00",
            "2023-06-21T09:15:50.656749+00:00",
            "2023-06-21T09:15:50.656042+00:00",
            "2023-06-21T09:15:50.656390+00:00",
            "2023-06-21T09:15:50.655197+00:00",
            "2023-06-21T09:15:50.655585+00:00",
            "2023-06-21T09:15:50.654906+00:00",
            "2023-06-21T09:15:50.654027+00:00",
            "2023-06-21T09:15:50.654321+00:00",
            "2023-06-21T09:15:50.654615+00:00",
            "2023-06-21T09:15:50.653730+00:00",
            "2023-06-21T09:15:50.653115+00:00",
            "2023-06-21T09:15:50.653412+00:00",
            "2023-06-21T09:15:50.652500+00:00",
            "2023-06-21T09:15:50.652814+00:00",
            "2023-06-21T09:15:50.652078+00:00",
            "2023-06-21T09:15:50.651778+00:00",
            "2023-06-21T09:15:50.651468+00:00",
            "2023-06-21T09:15:50.651170+00:00",
            "2023-06-21T09:15:50.650244+00:00",
            "2023-06-21T09:15:50.650870+00:00",
            "2023-06-21T09:15:50.650547+00:00",
            "2023-06-21T09:15:50.649883+00:00",
            "2023-06-21T09:15:50.649249+00:00",
            "2023-06-21T09:15:50.649546+00:00",
            "2023-06-21T09:15:50.648009+00:00",
            "2023-06-21T09:15:50.648314+00:00",
            "2023-06-21T09:15:50.648949+00:00",
            "2023-06-21T09:15:50.648647+00:00",
            "2023-06-21T09:15:50.647353+00:00",
            "2023-06-21T09:15:50.647653+00:00",
            "2023-06-21T09:15:50.647039+00:00",
            "2023-06-21T09:15:50.646286+00:00",
            "2023-06-21T09:15:50.646659+00:00",
            "2023-06-21T09:15:50.645300+00:00",
            "2023-06-21T09:15:50.645601+00:00",
            "2023-06-21T09:15:50.645900+00:00",
            "2023-06-21T09:15:50.644451+00:00",
            "2023-06-21T09:15:50.644970+00:00",
            "2023-06-21T09:15:50.644111+00:00",
            "2023-06-21T09:15:50.643804+00:00",
            "2023-06-21T09:15:50.643185+00:00",
            "2023-06-21T09:15:50.643491+00:00",
            "2023-06-21T09:15:50.642826+00:00",
            "2023-06-21T09:15:50.055000+00:00"
        };

        double totalDatesCount = dates.Length;
        DateTime startDateTime = DateTime.ParseExact(dates.First(), "yyyy-MM-dd'T'HH:mm:ss.ffffffK", CultureInfo.InvariantCulture);
        DateTime endDateTime = DateTime.ParseExact(dates.Last(), "yyyy-MM-dd'T'HH:mm:ss.ffffffK", CultureInfo.InvariantCulture);

        // calculate the differnce between startDateTime and endDateTime in milliseconds

        double totalMilliseconds = (startDateTime - endDateTime).TotalMilliseconds;


        double interval = totalMilliseconds / totalDatesCount;
        double reuestsPerSecond = 1000 / interval;

        Console.WriteLine("Expected total requests per second: {0}", (int)reuestsPerSecond);
    }
}